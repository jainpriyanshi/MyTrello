{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/auth/Register.js","components/auth/Verify.js","components/auth/generate.js","components/auth/changepass.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/layout/Navbar2.js","components/private-route/PrivateNavbar.js","components/dashboard/Dashboard.js","components/dashboard/board.js","components/dashboard/List.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","react_default","a","createElement","className","AppBar","position","style","backgroundColor","width","align","Toolbar","Typography","variant","textAlign","fontFamily","Link","to","Button","color","sectionStyle","height","background","concat","process","backgroundPosition","backgroundSize","backgroundRepeat","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","console","log","push","nextProps","class","Box","item","xs","sm","md","component","Paper","elevation","margin","noValidate","error","classnames","invalid","htmlFor","paddingLeft","borderRadius","letterSpacing","marginTop","Component","connect","userData","post","then","res","catch","err","response","data","withRouter","Verify","otp","verifyUser","Generate","GenerateOtp","Changepass","updatepass","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","_ref","rest","objectWithoutProperties","Route","assign","render","Redirect","Navbar2","onLogoutClick","display","marginLeft","split","marginBottom","onClick","layout_Navbar2","Dashboard","array","boardname","board","userid","get","_this2","_this3","Board","map","arr","boards","_id","b","boardid","textSize","pathname","fetch_data","listname","list","location","List","listid","taskname","task","Task","jwtToken","currentTime","Date","now","exp","href","App","es","BrowserRouter","Switch","PrivateNavbar","exact","path","private_route_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a997598f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/users/register\", userData)\n    .then(res => history.push(\"/verify\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const verifyUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/users/verify\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\nexport const GenerateOtp = (userData, history) => dispatch => {\n  axios\n    .post(\"/users/generate\", userData)\n    .then(res => history.push(\"/update\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\nexport const updatepass = (userData, history) => dispatch => {\n  axios\n    .post(\"/users/update\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport {Link} from \"react-router-dom\"; \nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Navbar() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root} >\n       <AppBar position=\"relative\" style={{backgroundColor:\"black\" , width:\"100%\", align:\"left\"}}>\n        <Toolbar>\n            <Typography variant=\"h6\" className={classes.title} style={{textAlign:\"left\", fontFamily:'Roboto'}}>\n            <Link to =  '/'>\n            <Button style={{color:\"white\"}}>  MyTrello </Button>\n            </Link>\n          </Typography>\n          \n          <Link to =  '/register'>\n          <Button style={{color:\"white\"}}> Register</Button>\n          </Link>\n          <Link to =  '/login'>\n          <Button style={{color:\"white\"}}> Login </Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\n\nvar sectionStyle = {\n  position : 'absolute',\n  width: \"100%\",\n  height: \"100%\",\n background: `url(${process.env.PUBLIC_URL}/auth_bg.jpg)` ,\n backgroundPosition: 'center',\n backgroundSize: 'cover',\n backgroundRepeat: 'no-repeat'\n};\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n  \n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n    console.log(newUser);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div style= {sectionStyle}>\n        <br></br>\n        \n      <div class=\"container\">\n          <div class=\"row\">\n          <div class=\"col-md-6 col-sm-12 my\">\n              \n              </div>\n              <div class=\"col-md-5 col-sm-12\">\n              \n              <Box width =\"100%\" height=\"100%\"  item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n              \n              \n                <div class=\"conainer\">\n              <div >\n              <h4 style={{ margin: \"50px 50px \"  }}>\n              <b>Sign In</b>\n              </h4>\n              </div>\n                <form noValidate onSubmit={this.onSubmit} style={{ margin: \"40px 40px \"  }}>\n                  <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n\n                  </div>\n                  <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n                </div>\n                <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n                </div>\n           \n                <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                  <button\n                    style={{\n                      width: \"150px\",\n                      borderRadius: \"3px\",\n                      letterSpacing: \"1.5px\",\n                      marginTop: \"1rem\"\n                    }}\n                    type=\"submit\"\n                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                  >\n                      Register\n                  </button>\n                  <p className=\"grey-text text-darken-1 mt-2 mb-2\">\n                  Already have an account? <Link to=\"/login\">Log in</Link>\n                </p>\n                </div>\n              </form>\n              </div>\n          \n              </Box>\n              </div>\n              \n            </div>\n      </div>   \n      </div>\n\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { verifyUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\n\nvar sectionStyle = {\n  position : 'absolute',\n  width: \"100%\",\n  height: \"100%\",\n background: `url(${process.env.PUBLIC_URL}/auth_bg.jpg)` ,\n backgroundPosition: 'center',\n backgroundSize: 'cover',\n backgroundRepeat: 'no-repeat'\n};\n\nclass Verify extends Component {\n  constructor() {\n    super();\n    this.state = {\n      otp: \"\",\n      email: \"\",\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      otp: this.state.otp,\n      email: this.state.email,\n    };\n\n    this.props.verifyUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n\n      <div style= {sectionStyle}>\n        <br></br>\n        <br></br>\n            <div class=\"container my-auto\">\n                <div class=\"row\">\n                <div class=\"col-md-6 col-sm-12\">\n                   \n                    </div>\n                    <div class=\"col-md-5 col-sm-12\">\n                      \n                    <Box width =\"100%\" height=\"100%\"  item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n                    \n                    \n                      <div class=\"conainer\">\n                    <div >\n                    <h4 style={{ margin: \"50px 50px \"  }}>\n                    <b>Verify</b>\n                    </h4>\n                    </div>\n                      <form noValidate onSubmit={this.onSubmit} style={{ margin: \"30px 30px \"  }}>\n                      <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n                        </div>\n                        <div className=\"input-field col s12\">\n                        \n                <input\n                  onChange={this.onChange}\n                  value={this.state.otp}\n                  error={errors.otp}\n                  id=\"otp\"\n                  type=\"number\"\n                  className={classnames(\"\", {\n                    invalid: errors.otp\n                  })}\n                />\n                <label htmlFor=\"otp\">Enter OTP</label>\n                <span className=\"red-text\">{errors.otp}</span>\n              </div>\n                      \n                      <br/>\n                      <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                        <button\n                          style={{\n                            width: \"150px\",\n                            borderRadius: \"3px\",\n                            letterSpacing: \"1.5px\",\n                            marginTop: \"1rem\"\n                            \n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                        >\n                          Verify\n                        </button>\n                        <p className=\"grey-text text-darken-1 mt-2 mb-2\">\n                        Already Verfied? <Link to=\"/login\">Log in</Link>\n                      </p>\n                      </div>\n                    </form>\n                    </div>\n                \n                    </Box>\n                    </div>\n                    \n                  </div>\n            </div>   \n          </div>\n    );\n  }\n}\n\nVerify.propTypes = {\n  verifyUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { verifyUser }\n)(withRouter(Verify));\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { GenerateOtp } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\n\nvar sectionStyle = {\n  position : 'absolute',\n  width: \"100%\",\n  height: \"100%\",\n background: `url(${process.env.PUBLIC_URL}/auth_bg.jpg)` ,\n backgroundPosition: 'center',\n backgroundSize: 'cover',\n backgroundRepeat: 'no-repeat'\n};\n\nclass Generate extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      email: this.state.email,\n    };\n\n    this.props.GenerateOtp(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n\n      <div style= {sectionStyle}>\n        <br></br>\n        <br></br>\n            <div class=\"container my-auto\">\n                <div class=\"row\">\n                <div class=\"col-md-6 col-sm-12\">\n                   \n                    </div>\n                    <div class=\"col-md-5 col-sm-12\">\n                      \n                    <Box width =\"100%\" height=\"100%\"  item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n                    \n                    \n                      <div class=\"conainer\">\n                    <div >\n                    <h4 style={{ margin: \"50px 50px \"  }}>\n                    <b>Forgot Password</b>\n                    </h4>\n                    </div>\n                      <form noValidate onSubmit={this.onSubmit} style={{ margin: \"30px 30px \"  }}>\n                      <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n                        </div>\n                      <br/>\n                      <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                        <button\n                          style={{\n                            width: \"150px\",\n                            borderRadius: \"3px\",\n                            letterSpacing: \"1.5px\",\n                            marginTop: \"1rem\"\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                        >\n                          Send OTP\n                        </button>\n                        <p className=\"grey-text text-darken-1 mt-2 mb-2\">\n                         <Link to=\"/login\">Log in</Link>\n                      </p>\n                      </div>\n                    </form>\n                    </div>\n                \n                    </Box>\n                    </div>\n                    \n                  </div>\n            </div>   \n          </div>\n    );\n  }\n}\n\nGenerate.propTypes = {\n  GenerateOtp: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { GenerateOtp }\n)(withRouter(Generate));\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updatepass } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\n\nvar sectionStyle = {\n  position : 'absolute',\n  width: \"100%\",\n  height: \"100%\",\n background: `url(${process.env.PUBLIC_URL}/auth_bg.jpg)` ,\n backgroundPosition: 'center',\n backgroundSize: 'cover',\n backgroundRepeat: 'no-repeat'\n};\n\nclass Changepass extends Component {\n  constructor() {\n    super();\n    this.state = {\n      otp: \"\",\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      otp: this.state.otp,\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.updatepass(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n\n      <div style= {sectionStyle}>\n        <br></br>\n        <br></br>\n            <div class=\"container my-auto\">\n                <div class=\"row\">\n                <div class=\"col-md-6 col-sm-12\">\n                   \n                    </div>\n                    <div class=\"col-md-5 col-sm-12\">\n                      \n                    <Box width =\"100%\" height=\"100%\"  item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n                    \n                    \n                      <div class=\"conainer\">\n                    <div >\n                    <h4 style={{ margin: \"50px 50px \"  }}>\n                    <b>Change Password</b>\n                    </h4>\n                    </div>\n                      <form noValidate onSubmit={this.onSubmit} style={{ margin: \"30px 30px \"  }}>\n                      <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n                        </div>\n                        <div className=\"input-field col s12\">\n                        \n                <input\n                  onChange={this.onChange}\n                  value={this.state.otp}\n                  error={errors.otp}\n                  id=\"otp\"\n                  type=\"number\"\n                  className={classnames(\"\", {\n                    invalid: errors.otp\n                  })}\n                />\n                <label htmlFor=\"otp\">Enter OTP</label>\n                <span className=\"red-text\">{errors.otp}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"email\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n                        </div>\n                      \n                      <br/>\n                      <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                        <button\n                          style={{\n                            width: \"150px\",\n                            borderRadius: \"3px\",\n                            letterSpacing: \"1.5px\",\n                            marginTop: \"1rem\"\n                            \n\n\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                        >\n                          Verify\n                        </button>\n                        <p className=\"grey-text text-darken-1 mt-2 mb-2\">\n                        Already Verfied? <Link to=\"/login\">Log in</Link>\n                      </p>\n                      </div>\n                    </form>\n                    </div>\n                \n                    </Box>\n                    </div>\n                    \n                  </div>\n            </div>   \n          </div>\n    );\n  }\n}\n\nChangepass.propTypes = {\n  updatepass: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { updatepass }\n)(withRouter(Changepass));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nvar sectionStyle = {\n    position : 'absolute',\n    width: \"100%\",\n    height: \"100%\",\n   background: `url(${process.env.PUBLIC_URL}/auth_bg.jpg)` ,\n   backgroundPosition: 'center',\n   backgroundSize: 'cover',\n   backgroundRepeat: 'no-repeat'\n  };\n\n  class Login extends Component {\n    constructor() {\n      super();\n      this.state = {\n        email: \"\",\n        password: \"\",\n        errors: {}\n      };\n    }\n\n    componentDidMount() {\n        // If logged in and user navigates to Login page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n          this.props.history.push(\"/dashboard\");\n        }\n      }\n    \n      componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n          this.props.history.push(\"/dashboard\");\n        }\n    \n        if (nextProps.errors) {\n          this.setState({\n            errors: nextProps.errors\n          });\n        }\n      }\n      onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n      };\n      onSubmit = e => {\n        e.preventDefault();\n        const userData = {\n          email: this.state.email,\n          password: this.state.password\n        };\n        this.props.loginUser(userData);\n      };\n\n\n      render() {\n        const { errors } = this.state;\n        return (\n          \n          <div style= {sectionStyle}>\n            <br></br>\n        <br></br>\n            <div class=\"container\">\n                <div class=\"row\">\n                <div class=\"col-md-6 col-sm-12 my\">\n                   \n                    </div>\n                    <div class=\"col-md-5 col-sm-12\">\n                      \n                    <Box width =\"100%\" height=\"100%\"  item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n                    \n                    \n                      <div class=\"conainer\">\n                    <div >\n                    <h4 style={{ margin: \"50px 50px \"}}>\n                    <b>Sign In</b>\n                    </h4>\n                    </div>\n                      <form noValidate onSubmit={this.onSubmit} style={{ margin: \"30px 30px \"  }}>\n                        <div className=\"input-field col s12\">\n                          <input\n                          onChange={this.onChange}\n                          value={this.state.email}\n                          error={errors.email}\n                          id=\"email\"\n                          type=\"email\"\n                          className={classnames(\"\", {\n                            invalid: errors.email || errors.emailnotfound\n                          })}\n                        />\n                          <label htmlFor=\"email\">Email</label>\n                          <span className=\"red-text\">\n                            {errors.email}\n                            {errors.emailnotfound}\n                          </span>\n                        </div>\n                        <div className=\"input-field col s12\">\n                        <input\n                          onChange={this.onChange}\n                          value={this.state.password}\n                          error={errors.password}\n                          id=\"password\"\n                          type=\"password\"\n                          className={classnames(\"\", {\n                            invalid: errors.password || errors.passwordincorrect\n                          })}\n                        />\n                        <label htmlFor=\"password\">Password</label>\n                        <span className=\"red-text\">\n                          {errors.password}\n                          {errors.passwordincorrect}\n                        </span>\n                      </div>\n                      <br/>\n                      <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                        <button\n                          style={{\n                            width: \"150px\",\n                            borderRadius: \"3px\",\n                            letterSpacing: \"1.5px\",\n                            marginTop: \"1rem\"\n                          }}\n                          type=\"submit\"\n                          className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                        >\n                          Login\n                        </button>\n                        <p className=\"grey-text text-darken-1 mt-2 mb-2\">\n                        Don't have an account? <Link to=\"/register\">Register</Link>\n                      </p>\n                      <p className=\"grey-text text-darken-1 mt-2 mb-2\">\n                         <Link to=\"/generate\">Forgot password</Link>\n                      </p>\n                      </div>\n                    </form>\n                    </div>\n                \n                    </Box>\n                    </div>\n                    \n                  </div>\n            </div>   \n            </div> \n            );\n    \n    }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport {Link} from \"react-router-dom\"; \nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass Navbar2 extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  render() {\n    const { user } = this.props.auth;\n\n    return (\n      <div style={{display: \"flex\"}} >\n       <AppBar position=\"static\" style={{backgroundColor:\"white\",width:\"100%\", align:\"left\"}}>\n        <Toolbar>\n            <Typography variant=\"h6\"  style={{textAlign:\"left\", fontFamily:'Roboto'}}>\n            <Link to =  '/'>\n            <Button style={{color:\"black\"}}> MyTrello </Button>\n            </Link>\n          </Typography>\n          <Typography variant=\"h6\"  style={{marginLeft: \"auto\", color : \"black\" , fontFamily:'Roboto'}}>\n            <b>Hey</b> {user.name.split(\" \")[0]}\n          </Typography>\n          <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\",\n                marginBottom : \"1rem\",\n                marginRight: \"1rem\",\n                marginLeft: \"1rem\"\n              }}\n              onClick={this.onLogoutClick}\n              class=\"btn btn-outline-danger\">\n            >\n              Logout\n            </button>\n            </Toolbar>\n      </AppBar>\n      </div>\n    );\n  }\n}\n\nNavbar2.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Navbar2);\n","import React from \"react\";\nimport { Route} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Navbar2 from \"../layout/Navbar2\"\n\nconst PrivateRoute = ({ component: Component,auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Navbar2 {...props} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\"\nimport {Link} from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  state = {\n    array: [],\n    boardname: \"\"\n   };\n   componentDidMount() {\n    axios.get('/boards/getboards')\n    .then((response) => {\n        this.setState({array : response.data});\n    });\n   }\n   onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n    };\n    onSubmit = e => {\n      e.preventDefault();\n      const board = {\n           name: this.state.boardname,\n           userid: this.props.auth.user.id\n        };\n        console.log(board)\n      axios\n      .post(\"/boards/createboard\", board)\n \n      axios.get('/boards/getboards')\n      .then((response) => {\n          this.setState({array : response.data});\n      });\n    };\n\n   fetch_data() {\n      var Board = [];\n      var board =[];\n      return this.state.array.map(arr => {\n        Board=arr.boards;\n        if(arr._id===this.props.auth.user.id)\n        {\n          return(\n            board=Board.map((b) =>\n            <div id = {b.boardid} >\n              <b style={{textSize: \"20px\"}}> {b.name} </b>\n            \n              <Link to={{ pathname: '/board', state: { id: b.boardid} }}>\n              <button\n              style={{\n                width: \"100px\",\n                borderRadius: \"1px\",\n                letterSpacing: \"1px\",\n                marginTop: \"1rem\"\n               }}\n              type=\"submit\"\n              className=\"btn btn-small waves-effect waves-light hoverable blue accent-3\"\n              >\n              Enter\n             </button>\n             </Link>\n\n            </div>\n            )\n          )\n        }\n      })\n   }\n  render() {\n    const { user } = this.props.auth;\n    return (\n      <div>\n         <div class=\"card container col-lg-6 mx-auto center\" >\n           <div style={{marginTop: \"50px\" }}>\n          <h1> Boards </h1>\n            {this.fetch_data()}\n            <div style={{marginTop: \"30px\" , marginBottom: \"20px\"}}> </div>\n            <form  onSubmit={this.onSubmit} >\n            <input\n                  onChange={this.onChange}\n                  value={this.state.boardname}\n                  id=\"boardname\"\n                  type=\"text\"\n              />\n              <label htmlFor=\"boardname\">Enter project</label>\n              <br />\n                <button\n                            style={{\n                              width: \"150px\",\n                              borderRadius: \"3px\",\n                              letterSpacing: \"1.5px\",\n                              marginTop: \"3rem\"\n                            }}\n                            className=\"btn btn-small waves-effect waves-light blue accent-3 mb-3\"\n                            type=\"submit\"\n                      \n                          >\n                            Add\n                          </button>\n            </form>\n            </div>\n          </div>\n          </div>\n  \n    );\n  }\n}\n\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\"\nimport {Link} from \"react-router-dom\";\n\nclass Board extends Component {\n  state = {\n    array: [],\n    listname: \"\"\n   };\n   componentDidMount() {\n    axios.get('/boards/getlist')\n    .then((response) => {\n        this.setState({array : response.data});\n    });\n   }\n   onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n\n    };\n    onSubmit = e => {\n      e.preventDefault();\n      const list = {\n           name: this.state.listname,\n           boardid: this.props.location.state.id\n        };\n        console.log(list)\n      axios\n      .post(\"/boards/createlist\", list)\n\n      axios.get('/boards/getlist')\n      .then((response) => {\n          this.setState({array : response.data});\n      });\n    };\n   fetch_data() {\n      var List = [];\n      var list =[];\n      return this.state.array.map(arr => {\n        List=arr.list;\n        \n        if(arr._id===this.props.location.state.id)\n        {\n          return(\n            list=List.map((b) =>\n            <div id = {b.listid} >\n              <b style={{textSize: \"20px\"}}> {b.name} </b>\n            \n              <Link to={{ pathname: '/board/list', state: { id: b.listid} }}>\n              <button\n              style={{\n                width: \"100px\",\n                borderRadius: \"1px\",\n                letterSpacing: \"1px\",\n                marginTop: \"1rem\"\n               }}\n              type=\"submit\"\n              className=\"btn btn-small waves-effect waves-light hoverable blue accent-3\"\n              >\n              Enter\n             </button>\n             </Link>\n            \n            </div>\n            )\n          )\n        }\n      })\n   }\n  render() {\n    return (\n      <div>\n         <div class=\"card container col-lg-6 mx-auto center\" >\n           <div style={{marginTop: \"50px\" }}>\n          <h1> List </h1>\n            {this.fetch_data()}\n            <div style={{marginTop: \"30px\" , marginBottom: \"20px\"}}> </div>\n            </div>\n            <form  onSubmit={this.onSubmit} >\n            <input\n                  onChange={this.onChange}\n                  value={this.state.listname}\n                  id=\"listname\"\n                  type=\"text\"\n              />\n              <label htmlFor=\"boardname\">Enter Task</label>\n              <br />\n                <button\n                            style={{\n                              width: \"150px\",\n                              borderRadius: \"3px\",\n                              letterSpacing: \"1.5px\",\n                              marginTop: \"3rem\"\n                            }}\n                            className=\"btn btn-small waves-effect waves-light blue accent-3 mb-3\"\n                            type=\"submit\"\n                      \n                          >\n                            Add\n                          </button>\n            </form>\n          </div>\n         \n          </div>\n  \n    );\n  }\n}\n\nBoard.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps\n)(Board);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\"\nimport {Link} from \"react-router-dom\";\n\nclass List extends Component {\n  state = {\n    array: [],\n    taskname: \"\"\n   };\n   onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n\n    };\n    onSubmit = e => {\n      e.preventDefault();\n      const task = {\n           name: this.state.taskname,\n           listid: this.props.location.state.id\n        };\n        console.log(task)\n      axios\n      .post(\"/boards/createtask\", task)\n\n      axios.get('/boards/gettask')\n      .then((response) => {\n          this.setState({array : response.data});\n      });\n    };\n   componentDidMount() {\n    console.log(this.props.location.state.id);\n    axios.get('/boards/gettask')\n    .then((response) => {\n        this.setState({array : response.data});\n    });\n   }\n   fetch_data() {\n      var Task = [];\n      var task =[];\n      return this.state.array.map(arr => {\n        Task=arr.task;\n        \n        if(arr._id===this.props.location.state.id)\n        {\n            console.log(Task);\n          return(\n            task=Task.map((b) =>\n            <div >\n                \n              <b style={{textSize: \"20px\"}}> {b.name} </b>\n            \n              \n            </div>\n            )\n          )\n        }\n      })\n   }\n  render() {\n    return (\n      <div>\n         <div class=\"card container col-lg-6 mx-auto center\" >\n           <div style={{marginTop: \"50px\" }}>\n          <h1> check list </h1>\n            {this.fetch_data()}\n            <div style={{marginTop: \"30px\" , marginBottom: \"20px\"}}> </div>\n            </div>\n            <form  onSubmit={this.onSubmit} >\n            <input\n                  onChange={this.onChange}\n                  value={this.state.taskname}\n                  id=\"taskname\"\n                  type=\"text\"\n              />\n              <label htmlFor=\"taskname\">Enter Subtask</label>\n              <br />\n                <button\n                            style={{\n                              width: \"150px\",\n                              borderRadius: \"3px\",\n                              letterSpacing: \"1.5px\",\n                              marginTop: \"3rem\"\n                            }}\n                            className=\"btn btn-small waves-effect waves-light blue accent-3 mb-3\"\n                            type=\"submit\"\n                      \n                          >\n                            Add\n                          </button>\n            </form>\n          </div>\n          </div>\n  \n    );\n  }\n}\n\nList.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps\n)(List);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Register from \"./components/auth/Register\";\nimport Verify from \"./components/auth/Verify\";\nimport Generate from \"./components/auth/generate\";\nimport Changepass from \"./components/auth/changepass\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport PrivateNavbar from \"./components/private-route/PrivateNavbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Board from \"./components/dashboard/board\";\nimport List from \"./components/dashboard/List\";\nif (localStorage.jwtToken) {\n\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n\n  const decoded = jwt_decode(token);\n\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000; \n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n          <Switch>\n              <PrivateNavbar  component={Navbar} />\n            </Switch>\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />            \n            <Route exact path=\"/verify\" component={Verify} /> \n            <Route exact path=\"/Generate\" component={Generate} /> \n            <Route exact path=\"/update\" component={Changepass} /> \n            <Route exact path=\"/board\" component={Board} /> \n            <Route exact path=\"/board/list\" component={List} /> \n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n            \n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}